openapi: 3.0.1
info:
  title: PART1
  version: 1.0.0
  description: Organise and manage modules' timetables
servers:
  - url: http://localhost:8080
    description: Localhost server
paths:
  /convenors:
    get:
      tags:
        - convenors
      summary: List all convenors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convenor'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessages'
    post:
      tags:
        - convenors
      summary: Create a specific  convenor
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convenor'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessages'
  /convenors/{id}:
    get:
      tags:
        - convenors
      summary: Get a specific convenor by ID
      operationId: getConvenorById
      parameters:
        - in: path
          name: id
          description: Convenor ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convenor'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessages'
    put:
      tags:
        - convenors
      summary: Update a specific convenor by ID
      operationId: updateConvenorById
      parameters:
        - in: path
          name: id
          description: Convenor ID
          required: true
          schema:
            type: integer
      requestBody:
        description: Convenor object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Convenor'
      responses:
        '200':
          description: Convenor updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convenor'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessages'
    delete:
      tags:
        - convenors
      summary: Delete a specific convenor by ID
      operationId: deleteConvenorById
      parameters:
        - in: path
          name: id
          description: Convenor ID
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Convenor Deleted Successfully
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessages'
  /convenors/{id}/modules:
    get:
      tags:
        - convenors
      summary: List all modules taught by a convenor
      parameters:
        - in: path
          name: id
          description: Convenor ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Convenor'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessages'
                

  /modules:
    get:
      tags:
        - modules
      summary: List all modules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessages'
    post:
      tags:
        - modules
      summary: Create a module
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessages'
  /modules/{code}:
    get:
      tags:
        - modules
      summary: Get a specific module by code
      operationId: getModuleByCode
      parameters:
        - in: path
          name: code
          description: Module code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessages'
    patch:
      tags:
        - modules
      summary: Update a specific module by code
      operationId: updateModuleByCode
      parameters:
        - in: path
          name: code
          description: Module code
          required: true
          schema:
            type: string
      requestBody:
        description: Module object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Module'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessages'
    delete:
      tags:
        - modules
      summary: Delete a specific module by code
      operationId: deleteModuleByCode
      parameters:
        - in: path
          name: code
          description: Module code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessages'
      
  /modules/{code}/sessions:
    get:
      tags:
        - modules
      summary: List all sessions in a module
      parameters:
        - in: path
          name: code
          description: Module code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessages'
    post:
      tags:
        - modules
      summary: Create a session in a module
      parameters:
        - in: path
          name: code
          description: Module code
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Session taught in this module created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        '409':
          description: Session taught in this module already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessages'
    
  /modules/{code}/sessions/{id}:   
    get:
      tags:
        - modules
      summary: Retrieve a session in a module
      parameters:
        - in: path
          name: code
          description: Module code
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: Session id
          required: true
          schema:
           type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessages'
                
    put:
      tags:
        - modules
      summary: Update a session in a module
      parameters:
        - in: path
          name: code
          description: Module code
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: Session id
          required: true
          schema:
           type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessages'
                
    patch:
      tags:
        - modules
      summary: Update a session in a module
      parameters:
        - in: path
          name: code
          description: Module code
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: Session id
          required: true
          schema:
           type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessages'            
    delete:
        tags:
          - modules
        summary: Delete a session in a module
        parameters:
          - in: path
            name: code
            description: Module code
            required: true
            schema:
              type: string
          - in: path
            name: id
            description: Session id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Module'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorMessages'
              
  /sessions:
    delete:
        tags:
          - sessions
        summary: Delete all sessions
        operationId: deleteAllSessions
        responses:
          '204':
            description: All sessions deleted successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Module'
          '404':
            description: Nothing to Delete
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorMessages'
  
    get:
        summary: List all sessions
        operationId: listAllSessions
        tags:
          - sessions
        parameters:
          - name: convenor
            in: query
            description: Filter by convenor ID
            schema:
              type: integer
          - name: module
            in: query
            description: Filter by module code
            schema:
              type: string
        responses:
          '200':
            description: Sessions retrieved successfully
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Session'
          '404':
            description: Sessions not found

              ###updated till here 
components:
  schemas: 
    Convenor:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for a convenor
        name:
          type: string
          description: Convenor's name
        position:
          type: string
          enum:
            - GTA
            - Lecturer
            - Professor
          description: Convenor's position
        modules: # The list of modules in a convenor
          type: array
          items:
            $ref: '#/components/schemas/Module'
      required:
        - id
    Module:
      type: object
      properties:
        code:
          type: string
          description: Unique identifier for a module
        title:
          type: string
          description: Module title
        level:
          type: integer
          description: Year in which the module is taught (1-4)
        optional:
          type: boolean
          description: Indicates whether the module is optional (true) or mandatory (false)
        sessions: # The list of sessions in a module
          type: array
          items:
            $ref: '#/components/schemas/Session'
      required:
        - code
    Session:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for a session
        topic:
          type: string
          description: Topic to be covered in the session
        datetime:
          type: string
          format: date-time
          description: Date and time when the session is taking place
        duration:
          type: integer
          description: Duration of the session in minutes
      required:
        - id
    ErrorMessages:
      type: object
      properties:
        message:
          type: string
          default: Error message
  parameters:
    convenorIdParam:
      name: id
      in: path
      description: ID of the convenor to retrieve
      required: true
      schema:
        type: integer
        format: int64
    moduleCodeParam:
      name: code
      in: path
      description: Code of the module to retrieve
      required: true
      schema:
        type: string
    sessionIdParam:
      name: id
      in: path
      description: ID of the session to retrieve
      required: true
      schema:
        type: integer
        format: int64
  responses:
    ConvenorResponse:
      description: A JSON object containing the details of a convenor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Convenor'
    ConvenorsResponse:
      description: A JSON array containing the details of all convenors
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Convenor'
    ModuleResponse:
      description: A JSON object containing the details of a module
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Module'
    ModulesResponse:
      description: A JSON array containing the details of all modules
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Module'
    SessionResponse:
      description: A JSON object containing the details of a module
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Session'
    SessionsResponse:
      description: A JSON array containing the details of all modules
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Session'
